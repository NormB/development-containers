log_level={log_level}
xlog_level={xlog_level}
log_stderror={log_stderror}
log_facility={log_facility}

udp_workers={udp_workers}

socket=udp:0.0.0.0:5060
socket=udp:127.0.0.1:5060

mpath="/usr/local/lib64/opensips/modules/"

loadmodule "sipmsgops.so"
loadmodule "signaling.so"
loadmodule "sl.so"
loadmodule "proto_udp.so"

loadmodule "options.so"
loadmodule "regex.so"
modparam("regex", "file", "/usr/local/etc/opensips/regex_groups")
modparam("regex", "max_groups", 10)
modparam("regex", "pcre_extended", 1)

loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/usr/local/etc/opensips/opensips_fifo")
modparam("mi_fifo", "fifo_mode", 0666)

loadmodule "rust_experiment.so"
modparam("rust-experiment", "count", 42)
modparam("rust-experiment", "name", "hello world")
modparam("rust-experiment", "chatgpt-key", "sk-your-own-openai-secret-key")

route {

    xlog("L_INFO", "[$ci] $rm ru=$ru fu=$fu received\n");

    if (pcre_match("$ua", "(?i)^sipsak")) {
        xlog("L_INFO", "User-Agent sipsak matches\n");
    }

    if (rust_experiment_test_str("$ua", "sipsak")) {
        xlog("L_INFO", "User-Agent sipsak matches\n");
    }

    if (is_method("OPTIONS")) {
        # script proessing exits after returning from this call
	rust_experiment_reply();
    }

}
